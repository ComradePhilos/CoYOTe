unit WeekEditForm;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, Grids,
  Buttons, StdCtrls, Arrow,
  { eigene Units }
  workdays, funcs;

type

  { TForm3 }

  TForm3 = class(TForm)
    ApplyButton: TBitBtn;
    Arrow1: TArrow;
    Arrow2: TArrow;
    BackButton: TBitBtn;
    Label1: TLabel;
    UndoButton: TBitBtn;
    WeekGrid: TStringGrid;

    procedure BackButtonClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { private declarations }
    FWeek: TWorkWeek;
    procedure WeekDaysToStringGrid(AGrid: TStringGrid; AWeek: TWorkWeek);
  public
    { public declarations }
    procedure showWeek(AWeek: TWorkWeek; ANumber: Integer);
  end;

var
  Form3: TForm3;

implementation

{$R *.lfm}

{ TForm3 }

procedure TForm3.FormCreate(Sender: TObject);
begin

end;

procedure TForm3.BackButtonClick(Sender: TObject);
begin
  self.Visible := False;
end;

procedure TForm3.showWeek(AWeek: TWorkWeek; ANumber: Integer);
begin
  self.FWeek := AWeek;
  Label1.Caption := 'Week ' + IntToStr(ANumber+1) + '(Length: ' + IntToStr(FWeek.WeekLength) +')' ;
  self.WeekDaysToStringGrid(WeekGrid, FWeek);
end;


procedure TForm3.WeekDaysToStringGrid(AGrid: TStringGrid; AWeek: TWorkWeek);
var
  I: Integer;
  day1: Integer;
begin
  clearStringGrid(AGrid);
  AGrid.RowCount := AWeek.WeekLength + 1;
  day1 := RealDayOfWeek(AWeek.FromDate);

  // write contents to right grid
  for I := 0 to (AWeek.WeekLength - 1) do
  begin
    AGrid.cells[0,0+I] := txtWeekdays[RealDayOfWeek(day1+I)] + ' ' + DateToStr(AWeek.FromDate+(I-1));

    if (AWeek.Days[I].StartMinute < 10) then
    begin
      AGrid.cells[1,0+I] := IntToStr(AWeek.Days[I].StartHour) + ':0' + IntToStr(AWeek.Days[I].StartMinute);
    end
    else
    begin
      AGrid.cells[1,0+I] := IntToStr(AWeek.Days[I].StartHour) + ':' + IntToStr(AWeek.Days[I].StartMinute);
    end;

    if (AWeek.Days[I].EndMinute < 10) then
    begin
      AGrid.cells[2,0+I] := IntToStr(AWeek.Days[I].EndHour) + ':0' + IntToStr(AWeek.Days[I].EndMinute);
    end
    else
    begin
      AGrid.cells[2,0+I] := IntToStr(AWeek.Days[I].EndHour) + ':' + IntToStr(AWeek.Days[I].EndMinute);
    end;
  end;

end;

end.

