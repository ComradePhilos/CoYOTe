{
 This Unit shall contain default values for strings, constant values etc.
 This is the place for the translation strings
}

unit CoyoteDefaults;

interface

uses INIFiles;

procedure LoadFromLanguageFile(AFilePath: string);

resourcestring
  // Programme-Information
  ProgrammeName = 'CoYOT(e)';     // Official Name shown to the user
  VersionNr = '0.0.5.11';          // Programme-Version
  VersionDate = '01.07.2014';     // Date of the latest changes
  LazarusVersion = '1.2.2';       // Version of the Lazarus IDE the programme was created with
  defLanguage = 'English';        // not sure what we will need in future
  defLanguageID = 'en';


// The following values are either default strings that can be translated using a lang-file or are default values which
// will be changed if there is an entry in the INI-file.

var

  // Messages / Errors
  txtDeleteAllMsg: string = 'Do you really wish to delete every entry? All data will be lost if you do not make a copy!';
  txtDeleteMsg: string =
  'Are you sure you want to delete this period including all days related to it? This cannot be made undone afterwards!';
  txtRemoveMsg: string = 'Do you really want to delete the selected day? This will delete all data related to it!';
  txtClearMsg: string =
  'This will clear the current week and make it empty but will NOT delete the week! Do you wish to Continue?';
  txtQuitMsg: string = 'You did not save your changes yet! Do you really want to quit?';

  txtCaptionDelete: string = 'Really delete?';
  txtQuitProgramme: string = 'Quit Programme';
  txtFileSaved: string = 'File saved...';
  txtNewFile: string = 'Created new file...';

  emDateOrder: string = 'Error: The dates are in the wrong order!';
  emHoursPerDay: string = 'Error: Enter a valid amount of time per day!';
  emInvalidFileFormat: string = 'The file could not be loaded, because it is not a valid CoYOT(e) file!';
  emFileNotFound: string = 'Error: The selected file could not be found!';
  emMergeNoWeekSelected: string =
  'Cannot merge, because no week to merge with has been selected! Please select one using the combobox!';
  emMergeSameWeek: string = 'Cannot merge a week with itself! Please select a different week via the combobox!';
  emInvalidNumber: string = 'Not a valid number input! Try switching "." and "," as the comma separator!';

  dbDefaultFirebirdUser: string = 'SYSDBA';
  dbDefaultFirebirdPort: string = ''; // 3050

  // Captions in menus
  mcFile: string = 'File';
  mcEdit: string = 'Edit';
  mcShow: string = 'Show';
  mcDataBase: string = 'Database';
  mcOptions: string = 'Options';
  mcHelp: string = 'Help';

  mcNew: string = 'New';
  mcSaveAs: string = 'Save as';
  mcSave: string = 'Save';
  mcOpen: string = 'Open';
  mcOpenRecent: string = 'Open Recent';
  mcExit: string = 'Exit';

  mcPeople: string = 'People';
  mcStatistics: string = 'Statistics';
  mcDatabaseSettings: string = 'database settings';
  mcDatabaseUpload: string = 'push to database';
  mcDatabaseDownload: string = 'load from database';
  mcProgrammeSettings: string = 'Programme Settings';
  mcColorTheme: string = 'Color Theme';
  mcLanguage: string = 'Language';
  mcManual: string = 'Manual (PDF)';
  mcAbout: string = 'About';

  bcApply: string = 'Apply';
  bcBack: string = 'Back';
  bcReset: string = 'Reset';

  // default short day names
  txtMon: string = 'Mon';
  txtTue: string = 'Tue';
  txtWed: string = 'Wed';
  txtThu: string = 'Thu';
  txtFri: string = 'Fri';
  txtSat: string = 'Sat';
  txtSun: string = 'Sun';

  txtSum: string = 'Sum';
  txtGoal: string = 'Goal';
  txtDiff: string = 'Diff';
  txtDays: string = 'Days';
  txtPeriod: string = 'Period';
  txtVacation: string = 'Vacation';
  txtSummary: String = 'Summary';


  // default long day names
  txtMonday: string = 'Monday';
  txtTuesday: string = 'Tuesday';
  txtWednesday: string = 'Wednesday';
  txtThursday: string = 'Thursday';
  txtFriday: string = 'Friday';
  txtSaturday: string = 'Saturday';
  txtSunday: string = 'Sunday';

  txtWeekDays: array[1..7] of string = ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun');
  // Standard Values - will be used, if nothing was found in the ini-file
  defHoursUntilPause: double = 6;  // Amount of time before the obligatory pause is needed / added
  defPausePerDay: double = 0.75;
  defHoursPerDay: double = 8;      // Standard Value
  defToolbarColor: integer = $00E0E0E0; // $00FFDBB7;

implementation

procedure LoadFromLanguageFile(AFilePath: string);
var
  INI: TInifile;
begin
  INI := TINIFile.Create(AFilePath);

  txtMon := INI.ReadString('CoyoteDefaults', 'txtMon', '');
  txtTue := INI.ReadString('CoyoteDefaults', 'txtTue', '');
  txtWed := INI.ReadString('CoyoteDefaults', 'txtWed', '');
  txtThu := INI.ReadString('CoyoteDefaults', 'txtThu', '');
  txtFri := INI.ReadString('CoyoteDefaults', 'txtFri', '');
  txtSat := INI.ReadString('CoyoteDefaults', 'txtSat', '');
  txtSun := INI.ReadString('CoyoteDefaults', 'txtSun', '');

  txtWeekDays[1] := txtMon;
  txtWeekDays[2] := txtTue;
  txtWeekDays[3] := txtWed;
  txtWeekDays[4] := txtThu;
  txtWeekDays[5] := txtFri;
  txtWeekDays[6] := txtSat;
  txtWeekDays[7] := txtSun;

  txtQuitMsg := INI.ReadString('CoyoteDefaults', 'txtQuitMsg', txtQuitMsg);
  txtQuitProgramme := INI.ReadString('CoyoteDefaults', 'txtQuitProgramme', txtQuitProgramme);

  txtSum := INI.ReadString('CoyoteDefaults', 'txtSum', txtSum);
  txtGoal := INI.ReadString('CoyoteDefaults', 'txtGoal', txtGoal);
  txtDiff := INI.ReadString('CoyoteDefaults', 'txtDiff', txtDiff);
  txtDays := INI.ReadString('CoyoteDefaults', 'txtDays', txtDays);
  txtPeriod := INI.ReadString('CoyoteDefaults', 'txtPeriod', txtPeriod);
  txtVacation := INI.ReadString('CoyoteDefaults', 'txtVacation', txtVacation);
  txtSummary := INI.ReadString('CoyoteDefaults', 'txtSummary', txtSummary);

  mcFile := INI.ReadString('MenuCaption', 'mcFile', mcFile);
  mcEdit := INI.ReadString('MenuCaption', 'mcEdit', mcEdit);
  mcShow := INI.ReadString('MenuCaption', 'mcShow', mcShow);
  mcDataBase := INI.ReadString('MenuCaption', 'mcDataBase', mcDataBase);
  mcOptions := INI.ReadString('MenuCaption', 'mcOptions', mcOptions);
  mcHelp := INI.ReadString('MenuCaption', 'mcHelp', mcHelp);

  mcNew := INI.ReadString('MenuCaption', 'mcNew', mcNew);
  mcOpen := INI.ReadString('MenuCaption', 'mcOpen', mcOpen);
  mcOpenRecent := INI.ReadString('MenuCaption', 'mcOpenRecent', mcOpenRecent);
  mcSaveAs := INI.ReadString('MenuCaption', 'mcSaveAs', mcSaveAs);
  mcSave := INI.ReadString('MenuCaption', 'mcSave', mcSave);
  mcExit := INI.ReadString('MenuCaption', 'mcExit', mcExit);

  mcPeople := INI.ReadString('MenuCaption', 'mcPeople', mcPeople);
  mcStatistics := INI.ReadString('MenuCaption', 'mcStatistics', mcStatistics);
  mcDatabaseSettings := INI.ReadString('MenuCaption', 'mcDatabaseSettings', mcDatabaseSettings);
  mcDatabaseUpload := INI.ReadString('MenuCaption', 'mcDatabaseUpload', mcDatabaseUpload);
  mcDatabaseDownload := INI.ReadString('MenuCaption', 'mcDatabaseDownload', mcDatabaseDownload);
  mcProgrammeSettings := INI.ReadString('MenuCaption', 'mcProgrammeSettings', mcProgrammeSettings);
  mcColorTheme := INI.ReadString('MenuCaption', 'mcColorTheme', mcColorTheme);
  mcLanguage := INI.ReadString('MenuCaption', 'mcLanguage', mcLanguage);
  mcManual := INI.ReadString('MenuCaption', 'mcManual', mcManual);
  mcAbout := INI.ReadString('MenuCaption', 'mcAbout', mcAbout);

  bcApply := INI.ReadString('Buttons', 'bcApply', bcApply);
  bcBack := INI.ReadString('Buttons', 'bcBack', bcBack);
  bcReset := INI.ReadString('Buttons', 'bcReset', bcReset);
end;


end.
